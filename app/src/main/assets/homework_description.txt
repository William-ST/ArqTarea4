(X) Ejercicio: Crear de un test unitario
(X) Ejercicio: Crear un test unitario con parámetros
(X) Ejercicio: Crear un test que capture excepciones
(X) Práctica: Añadir métodos a MathOperation
(X) Ejercicio: Completar la clase MathOperation
(X) Ejercicio: Refactorizar el método exponentation
(X) Práctica: Refactorizar squareRoot() y factorial()
(X) Ejercicio: Crear la clase MathExpression
(X) Ejercicio: Crear una Suite
(X) Ejercicio: Crear la clase MathCalculator
(X) Práctica: Realizar un test para MathCalculator
(X) Ejercicio: Crear un mock
(X) Ejercicio: Crear un test doble con Mockito
(X) Ejercicio: Crear la clase CalculatorPresenterImp
(X) Práctica: Completar los test de CalculatorPresenterImp
(X) Ejercicio: Crear la interfaz de usuario de la Calculadora
(X) Ejercicio: Crear un test de IU con Espresso
(X) Ejercicio: Refactorizar MainActivityTest para usar JUnitParams
(X) Ejercicio: Crear un ViewAction personalizado
(X) Práctica: Realizar los test de removeLastButton y clearButton
(X) Ejercicio: Ejecutar test de instrumentación con Firebase Test Lab
(X) Ejercicio: Test de instrumentación con Robo Test
Extras:
(X) Práctica: Refactorizar los métodos de la clase MathOperation para evitar un NullPointerException en tiempo de ejecución como consecuencia del Autoboxing (ver explicación en el vídeo de repaso desde 1:04:55)
(X) Práctica: Refactorizar los métodos removeSymbol(), replaceSymbol y tokenize()
(_) Práctica: Completar los test de MathCalculator usando Mockito //Solo un par
